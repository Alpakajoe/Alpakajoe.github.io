const canvas = document.getElementById('canvas');
canvas.width = canvas.clientWidth;
canvas.height = canvas.clientHeight;
const gl = canvas.getContext('experimental-webgl');
    
// Vertices in array
    const vertices = new Float32Array([
        0.54, 0.26, // right wing start
        0.76, 0.29,
        0.64, 0.32,

        0.54, 0.26,
        0.77, 0.20,  
        0.76, 0.29,
        
        0.54, 0.26,
        0.65, 0.10,
        0.77, 0.20,
        
        0.54, 0.26,
        0.55, 0.08,
        0.65, 0.10,
        
        0.54, 0.26,
        0.41, 0.07,
        0.55, 0.08,
        
        0.54, 0.26,
        0.36, 0.16,
        0.41, 0.07,
        
        0.36, 0.16,
        0.18, 0.10,
        0.41, 0.07,
        
        0.41, 0.07,
        0.18, 0.10,
        0.16, 0.04,
        
        0.41, 0.07,
        0.16, 0.04,
        0.37, -0.05,
        
        0.41, 0.07,
        0.37, -0.05,
        0.51, -0.04,
        
        0.41, 0.07,
        0.51, -0.04,
        0.58, 0.01, 
        
        0.41, 0.07, 
        0.58, 0.01,
        0.55, 0.08, // right wing end

        0, 0.24, // upper body start
        0.12, 0.19,
        0.11, 0.27,

        0, 0.24,  
        0.11, 0.27,
        0.03, 0.33,
        
        0, 0.24,
        0.03, 0.33,
        -0.03, 0.33,
        
        0, 0.24,
        -0.03, 0.33,      
        -0.11, 0.27,
        
        0, 0.24,
        -0.11, 0.27,
        -0.12, 0.19,

        0, 0.24,
        -0.12, 0.19,
        0.12, 0.19, 

        0, 0.13,
        0.12, 0.19,
        -0.12, 0.19,
        
        0, 0.13,
        0.18, 0.10,
        0.12, 0.19,
        
        0, 0.13,
        0.16, 0.04,
        0.18, 0.10,

        0, 0.13,
        0.07, -0.01,
        0.16, 0.04,
        
        0, 0.13,
        -0.07, -0.01,
        0.07, -0.01,
        
        0, 0.13,
        -0.16, 0.04, 
        -0.07, -0.01,
        
        0, 0.13,
        -0.18, 0.10,
        -0.16, 0.04,
        
        0, 0.13,
        -0.12, 0.19, 
        -0.18, 0.10,
        
        0.07, -0.01,
        0.18, -0.04,
        0.16, 0.04,
        
        -0.07, -0.01,
        -0.16, 0.04,
        -0.18, -0.04, // upper body end

        0, -0.13, // lower body start
        0.07, -0.01,
        -0.07, -0.01,

        0, -0.13,
        0.18, -0.04,
        0.07, -0.01,
        
        0, -0.13,
        0.20, -0.20,
        0.18, -0.04,
        
        0, -0.13,
        0.07, -0.23,
        0.20, -0.20,
        
        0, -0.13,
        -0.07, -0.23,
        0.07, -0.23,
        
        0, -0.13,
        -0.20, -0.20,
        -0.07, -0.23,
        
        0, -0.13,
        -0.18, -0.04,
        -0.20, -0.20,
        
        0, -0.13,
        -0.07, -0.01,
        -0.18, -0.04,

        0, -0.32,
        0.07, -0.23,
        -0.07, -0.23,
        
        0, -0.32,
        0.15, -0.35,
        0.07, -0.23,
        
        0, -0.32,
        0.06, -0.42,
        0.15, -0.35, 
        
        0, -0.32,
        -0.06, -0.42,  
        0.06, -0.42,
        
        0, -0.32,
        -0.15, -0.35, 
        -0.06, -0.42,
        
        0, -0.32,
        -0.07, -0.23, 
        -0.15, -0.35,
        
        0.07, -0.23, 
        0.15, -0.35,
        0.20, -0.20,
        
        -0.07, -0.23,
        -0.20, -0.20,
        -0.15, -0.35, // lower body end

        -0.54, 0.26, // left wing start
        -0.64, 0.32,
        -0.76, 0.29,

        -0.54, 0.26,  
        -0.76, 0.29,
        -0.77, 0.20,
        
        -0.54, 0.26,
        -0.77, 0.20,
        -0.65, 0.10,
        
        -0.54, 0.26,
        -0.65, 0.10,
        -0.55, 0.08,
        
        -0.54, 0.26,
        -0.55, 0.08,
        -0.41, 0.07,
        
        -0.54, 0.26,
        -0.41, 0.07,
        -0.36, 0.16,
        
        -0.36, 0.16,
        -0.41, 0.07,
        -0.18, 0.10,
        
        -0.41, 0.07,
        -0.16, 0.04,
        -0.18, 0.10,
        
        -0.41, 0.07,
        -0.37, -0.05,
        -0.16, 0.04,
        
        -0.41, 0.07,
        -0.51, -0.04,
        -0.37, -0.05,
        
        -0.41, 0.07,
        -0.58, 0.01,
        -0.51, -0.04,
        
        -0.41, 0.07,
        -0.55, 0.08,
        -0.58, 0.01, // left wing end
    ]);
    
   const colors = new Float32Array([
        1, 1, 0.8,
        0.9, 0.9, 0.8,
        0.9, 0.9, 0.8,

        1, 1, 0.8,
        0.9, 0.9, 0.8,
        1, 1, 0.8,
    
        0.9, 0.9, 0.8,
        1, 1, 0.8,
        0.9, 0.9, 0.8,
    
        0.9, 0.9, 0.8,
        1, 1, 0.8,
        0.9, 0.9, 0.8,
    
        1, 1, 0.8,  
        0.9, 0.9, 0.8,  
        1, 1, 0.8,         
    
        0.9, 0.9, 0.8,
        1, 1, 0.8,
        1, 1, 0.8,    
        
        1, 1, 0.8,
        0.9, 0.9, 0.8,
        0.9, 0.9, 0.8,
    
        1, 1, 0.8,
        0.9, 0.9, 0.8,
        1, 1, 0.8,
    
        1, 1, 0.8,
        0.9, 0.9, 0.8,
        1, 1, 0.8,
    
        0.9, 0.9, 0.8,
        0.9, 0.9, 0.8,
        1, 1, 0.8,
    
        1, 1, 0.8,
        1, 1, 0.8,
        0.9, 0.9, 0.8,
    
        0.9, 0.9, 0.8,
        0.9, 0.9, 0.8,
        1, 1, 0.8,
    
        0.3, 0.2, 0,
        0, 0, 0,
        0, 0, 0,
    
        0.3, 0.2, 0,
        0, 0, 0,
        0, 0, 0,
    
        0.3, 0.2, 0,
        0, 0, 0,
        0, 0, 0,
    
        0.3, 0.2, 0,
        0, 0, 0,
        0, 0, 0,
    
        0.3, 0.2, 0,
        0, 0, 0,
        0, 0, 0,
    
        0.3, 0.2, 0,
        0, 0, 0,
        0, 0, 0,
    
        1, 0.7, 0.1,
        1, 0.8, 0,
        1, 0.8, 0.2,
    
        1, 0.6, 0.1,
        1, 0.7, 0.1,
        1, 0.8, 0.3, 
    
        0.3, 0.2, 0,
        0, 0, 0,
        0, 0, 0,

        0.3, 0.2, 0,
        0, 0, 0,
        0, 0, 0,

        0.3, 0.2, 0,
        0, 0, 0,
        0, 0, 0,

        0.3, 0.2, 0,
        0, 0, 0,
        0, 0, 0,

        0.3, 0.2, 0,
        0, 0, 0,
        0, 0, 0,

        1, 0.6, 0.1,
        1, 0.7, 0.1,
        1, 0.8, 0.3,

        0, 0, 0,
        0, 0, 0,
        0, 0, 0,

        0, 0, 0,
        0, 0, 0,
        0, 0, 0,

        0.3, 0.2, 0,
        0, 0, 0,
        0, 0, 0,

        0.3, 0.2, 0,
        0, 0, 0,
        0, 0, 0,

        1, 0.8, 0,
        1, 0.7, 0.1,
        1, 0.8, 0.2,

        0.3, 0.2, 0,
        0, 0, 0,
        0, 0, 0,

        0.3, 0.2, 0,
        0, 0, 0,
        0, 0, 0,

        0.3, 0.2, 0,
        0, 0, 0,
        0, 0, 0,
        
        1, 0.8, 0.3,
        1, 0.6, 0.1,
        1, 0.7, 0.1,
        
        0.3, 0.2, 0,
        0, 0, 0,
        0, 0, 0,

        0.3, 0.2, 0,
        0, 0, 0,
        0, 0, 0,

        0.3, 0.2, 0,
        0, 0, 0,
        0, 0, 0,

        0.9, 0.9, 0.8,
        1, 1, 0.8,        
        0.9, 0.9, 0.8,

        1, 1, 0.8,
        0.9, 0.9, 0.8,
        0.9, 0.9, 0.8,

        1, 1, 0.8,
        0.9, 0.9, 0.8,
        1, 1, 0.8,

        0.3, 0.2, 0,
        0, 0, 0,
        0, 0, 0,

        0, 0, 0,
        0, 0, 0,
        0, 0, 0,

        0, 0, 0,
        0, 0, 0,
        0, 0, 0,

        0.9, 0.9, 0.8,
        1, 1, 0.8,
        0.9, 0.9, 0.8,

        1, 1, 0.8,
        0.9, 0.9, 0.8,
        1, 1, 0.8,
    
        0.9, 0.9, 0.8,        
        0.9, 0.9, 0.8,
        1, 1, 0.8,
    
        0.9, 0.9, 0.8,
        0.9, 0.9, 0.8,
        1, 1, 0.8,
    
        1, 1, 0.8,  
        0.9, 0.9, 0.8,  
        1, 1, 0.8,         
    
        0.9, 0.9, 0.8,
        1, 1, 0.8,
        1, 1, 0.8,    
        
        1, 1, 0.8,
        0.9, 0.9, 0.8,
        0.9, 0.9, 0.8,
    
        1, 1, 0.8,
        0.9, 0.9, 0.8,
        1, 1, 0.8,
    
        1, 1, 0.8,
        0.9, 0.9, 0.8,
        1, 1, 0.8,
    
        0.9, 0.9, 0.8,
        0.9, 0.9, 0.8,
        1, 1, 0.8,
    
        1, 1, 0.8,
        1, 1, 0.8,
        0.9, 0.9, 0.8,
    
        0.9, 0.9, 0.8,
        0.9, 0.9, 0.8,
        1, 1, 0.8,
        ]);
    
// Background color
    gl.clearColor(0.2, 0.2, 0.2, 0);
    gl.frontFace(gl.CCW);
    gl.enable(gl.CULL_FACE);
    gl.cullFace(gl.BACK);
    
// Vertex shader
    const vertexShaderSource = ''
    + 'attribute vec2 pos;'
    + 'attribute vec4 col;'
    + 'varying vec4 color;'
    + 'void main(){'
    + 'color = col;'
    + 'gl_Position = vec4(pos, 0, 1); '
    + '}';
    const vertexShader = gl.createShader(gl.VERTEX_SHADER);
    gl.shaderSource(vertexShader, vertexShaderSource);
    gl.compileShader(vertexShader);
    
// Fragment shader
    const fragmentShaderSource = ''
    + 'precision mediump float;'
    + 'varying vec4 color;'
    + 'void main() {'
    + ' gl_FragColor = color; '
    + '}';
    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);
    gl.shaderSource(fragmentShader, fragmentShaderSource);
    gl.compileShader(fragmentShader);
    
// Create program
    const program = gl.createProgram();
    gl.attachShader(program, fragmentShader);
    gl.attachShader(program, vertexShader);
    gl.linkProgram(program);
    gl.useProgram(program);
    
// vertex buffer
    const vbo = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, vbo);
    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);
        
    const posAttrib = gl.getAttribLocation(program, 'pos');
    gl.vertexAttribPointer(posAttrib, 2, gl.FLOAT, false, 0, 0);
    gl.enableVertexAttribArray(posAttrib);
        
    var vboCol = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, vboCol);
    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);
        
    var colAttrib = gl.getAttribLocation(program, 'col');
    gl.vertexAttribPointer(colAttrib, 3, gl.FLOAT, false, 0, 0);
    gl.enableVertexAttribArray(colAttrib);
    
// render with TRIANGLES
    gl.clear(gl.COLOR_BUFFER_BIT);
    gl.drawArrays(gl.TRIANGLES, 0, vertices.length / 2);
